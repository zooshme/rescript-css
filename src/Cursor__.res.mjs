// Generated by ReScript, PLEASE EDIT WITH CARE


function toString(value) {
  if (value === "cell") {
    return "cell";
  } else if (value === "copy") {
    return "copy";
  } else if (value === "swResize") {
    return "sw-resize";
  } else if (value === "grab") {
    return "grab";
  } else if (value === "help") {
    return "help";
  } else if (value === "move") {
    return "move";
  } else if (value === "none") {
    return "none";
  } else if (value === "text") {
    return "text";
  } else if (value === "rowResize") {
    return "row-resize";
  } else if (value === "wait") {
    return "wait";
  } else if (value === "pointer") {
    return "pointer";
  } else if (value === "seResize") {
    return "se-resize";
  } else if (value === "zoomOut") {
    return "zoom-out";
  } else if (value === "sResize") {
    return "s-resize";
  } else if (value === "zoomIn") {
    return "zoom-in";
  } else if (value === "grabbing") {
    return "grabbing";
  } else if (value === "nsResize") {
    return "ns-resize";
  } else if (value === "nwseResize") {
    return "nwse-resize";
  } else if (value === "progress") {
    return "progress";
  } else if (value === "crosshair") {
    return "crosshair";
  } else if (value === "wResize") {
    return "w-resize";
  } else if (value === "noDrop") {
    return "no-drop";
  } else if (value === "allScroll") {
    return "all-scroll";
  } else if (value === "verticalText") {
    return "vertical-text";
  } else if (value === "nResize") {
    return "n-resize";
  } else if (value === "default") {
    return "default";
  } else if (value === "neswResize") {
    return "nesw-resize";
  } else if (value === "alias") {
    return "alias";
  } else if (value === "ewResize") {
    return "ew-resize";
  } else if (value === "eResize") {
    return "e-resize";
  } else if (value === "nwResize") {
    return "nw-resize";
  } else if (value === "contextMenu") {
    return "context-menu";
  } else if (value === "colResize") {
    return "col-resize";
  } else if (value === "notAllowed") {
    return "not-allowed";
  } else if (value === "neResize") {
    return "ne-resize";
  } else {
    return "auto";
  }
}

function css(value) {
  return {
          cursor: toString(value)
        };
}

export {
  toString ,
  css ,
}
/* No side effect */
