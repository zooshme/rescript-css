// Generated by ReScript, PLEASE EDIT WITH CARE


function toString(value) {
  if (value === "center") {
    return "center";
  } else if (value === "baseline") {
    return "baseline";
  } else if (value === "flexStart") {
    return "flex-start";
  } else if (value === "flexEnd") {
    return "flex-end";
  } else {
    return "stretch";
  }
}

function css(value) {
  return {
          alignItems: toString(value)
        };
}

var AlignItems = {
  toString: toString,
  css: css
};

function toString$1(value) {
  if (value === "spaceAround") {
    return "space-around";
  } else if (value === "center") {
    return "center";
  } else if (value === "spaceBetween") {
    return "space-between";
  } else if (value === "flexStart") {
    return "flex-start";
  } else if (value === "flexEnd") {
    return "flex-end";
  } else {
    return "space-evenly";
  }
}

function css$1(value) {
  return {
          alignContent: toString$1(value)
        };
}

var AlignContent = {
  toString: toString$1,
  css: css$1
};

function toString$2(value) {
  if (value === "center") {
    return "center";
  } else if (value === "flexStart") {
    return "flex-start";
  } else if (value === "flexEnd") {
    return "flex-end";
  } else {
    return "stretch";
  }
}

function css$2(value) {
  return {
          justifyItems: toString$2(value)
        };
}

var JustifyItems = {
  toString: toString$2,
  css: css$2
};

function toString$3(value) {
  if (value === "spaceAround") {
    return "space-around";
  } else if (value === "center") {
    return "center";
  } else if (value === "spaceBetween") {
    return "space-between";
  } else if (value === "flexStart") {
    return "flex-start";
  } else if (value === "flexEnd") {
    return "flex-end";
  } else {
    return "space-evenly";
  }
}

function css$3(value) {
  return {
          justifyContent: toString$3(value)
        };
}

var JustifyContent = {
  toString: toString$3,
  css: css$3
};

function toString$4(value) {
  if (value === "row") {
    return "row";
  } else if (value === "columnReverse") {
    return "column-reverse";
  } else if (value === "rowReverse") {
    return "row-reverse";
  } else {
    return "column";
  }
}

function css$4(value) {
  return {
          flexDirection: toString$4(value)
        };
}

var Direction = {
  toString: toString$4,
  css: css$4
};

function toString$5(value) {
  if (value === "wrapReverse") {
    return "wrap-reverse";
  } else if (value === "nowrap") {
    return "nowrap";
  } else {
    return "wrap";
  }
}

function css$5(value) {
  return {
          flexWrap: toString$5(value)
        };
}

var Wrap = {
  toString: toString$5,
  css: css$5
};

export {
  AlignItems ,
  AlignContent ,
  JustifyItems ,
  JustifyContent ,
  Direction ,
  Wrap ,
}
/* No side effect */
