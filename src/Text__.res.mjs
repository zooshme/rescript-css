// Generated by ReScript, PLEASE EDIT WITH CARE


function toString(value) {
  return "DM Sans, sans-serif";
}

function css(value) {
  return {
          fontFamily: toString(value)
        };
}

var Font = {
  toString: toString,
  css: css
};

function toString$1(value) {
  if (value === "md") {
    return (14.0 * Math.pow(1.61, 2.0)).toString() + "px";
  } else if (value === "sm") {
    return (14.0 * Math.pow(1.61, 1.0)).toString() + "px";
  } else if (value === "xl") {
    return (14.0 * Math.pow(1.61, 4.0)).toString() + "px";
  } else if (value === "xs") {
    return (14.0 * Math.pow(1.61, -1.0)).toString() + "px";
  } else if (value === "xxl") {
    return (14.0 * Math.pow(1.61, 5.0)).toString() + "px";
  } else {
    return (14.0 * Math.pow(1.61, 3.0)).toString() + "px";
  }
}

function css$1(value) {
  return {
          fontSize: toString$1(value)
        };
}

var Size = {
  base: 14.0,
  scale: 1.61,
  toString: toString$1,
  css: css$1
};

function toString$2(value) {
  if (value === "semiBold") {
    return "600";
  } else if (value === "light") {
    return "300";
  } else if (value === "medium") {
    return "500";
  } else if (value === "regular") {
    return "400";
  } else {
    return "700";
  }
}

function css$2(value) {
  return {
          fontWeight: toString$2(value)
        };
}

var Weight = {
  toString: toString$2,
  css: css$2
};

function toString$3(value) {
  if (value === "tight") {
    return "1";
  } else if (value === "normal") {
    return "1.2";
  } else {
    return "1.5";
  }
}

function css$3(value) {
  return {
          lineHeight: toString$3(value)
        };
}

var Leading = {
  toString: toString$3,
  css: css$3
};

function toString$4(value) {
  if (value === "underline") {
    return "underline";
  } else if (value === "lineThrough") {
    return "line-through";
  } else {
    return "none";
  }
}

function css$4(value) {
  return {
          textDecoration: toString$4(value)
        };
}

var Decoration = {
  toString: toString$4,
  css: css$4
};

function color(color$1) {
  return {
          color: color$1
        };
}

export {
  Font ,
  Size ,
  Weight ,
  Leading ,
  Decoration ,
  color ,
}
/* No side effect */
